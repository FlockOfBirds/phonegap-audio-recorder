{
    "extends": "eslint:all",
    "rules": {
        "linebreak-style": "off",
        "lines-around-comment": "off", // don't waste space with to many empty lines.
        "no-inline-comments": "off", // why not!
        "line-comment-position": "off",
        "func-names": "off", // each object property does not have a function name, though its recommended with other functions.
        "object-property-newline": "off", // uses object-curly-newline, max 2 inline.
        "no-underscore-dangle": "off", // dangling for private variables
        "no-invalid-this": "off", // should be checked, however using dojoLang.hitch, there will be many
        "vars-on-top": "off", // Functions fill have a logger first, best practice to have all var declared just after
        "no-negated-condition": "off", // create un needed if states.
        "newline-before-return": "off", // styling we might like to use?
        "callback-return": "off", //  maybe should be enabled.
        "sort-vars": "off", // not easy, when assigning derived value in de var declaration.
        "newline-after-var": "off", // could be a good option...
        "no-extra-parens": "off", // make code more readable.
        "no-ternary": "off", // usefull for shorting code.
        // FOB Preference.
        "init-declarations": [ "error", "always" ], // always init your declarations, set it to null if you like so.
        "valid-jsdoc": [ "error", { "requireReturn": false } ], // we do not need to document return in js-doc
        "id-length": [ "error", { "exceptions": [ "x", "y", "i", "j" ], "properties": "never" } ], // we except the use for short vars i and j for iterators, x and y for coordinates.
        "dot-location": [ "error", "property" ], // like to see the dot in front of the new line.
        "multiline-ternary": "off",
        "padded-blocks": [ "error", "never" ],
        // "linebreak-style": ["error", "windows"], // we should choose, as the cloud is unix...
        "no-plusplus": "off",
        "consistent-return": "error", //
        "indent": [ "error", 4 ],
        "no-else-return": "error",
        "semi": [ "error", "always" ],
        "space-unary-ops": "error",
        "max-statements": [ "error", 25 ], // could be a little but more complex that the default 16
        "max-depth": [ "error", 5 ],  // still need to defile best level
        "complexity": [ "error", 10 ],
        "max-len": [ "warn", {
            "code": 120,
            "ignoreComments": true
        } ],
        // "max-params": ["warn", 3],
        "max-params": "off",
        "max-nested-callbacks": [ "error", 2 ],
        "no-trailing-spaces": "error",
        "quotes": [ "error", "double", { "avoidEscape": true } ],
        "keyword-spacing": [ "error", { "before": true, "after": true } ],
        // "space-in-brackets": ["error", "always"], // potential rule
        "comma-spacing": [ "error", { "before": false, "after": true } ],
        "no-multi-spaces": "error",
        "space-infix-ops": "error",
        "space-before-function-paren": [ "error", "never" ],
        "space-before-blocks": "error",
        "space-in-parens": [ "error", "never" ],
        "one-var": [ 2, "always" ],
        "camelcase": "error", // camel
        // "vars-on-top" : "error",
        "no-magic-numbers": [ "error", { "ignore": [ -1, 0, 1 ] } ], // dont use magic number, please name your numbers
        "spaced-comment": [ "error", "always", { "exceptions": [ "-", "+" ] } ], // spaced comments better readable.
        "quote-props": [ "error", "as-needed" ], // don't use more quotes than needed.
        // "object-curly-newline"  : ["error", {"minProperties": 3 }],
        "object-curly-newline": "off", // ["error", {
        //    "multiline": true,
        //    "minProperties": 3
        // }], // properties inline is ok, but not more than 3
        "max-lines": [ "error", { "max": 400, "skipBlankLines": true, "skipComments": true } ],
        "object-curly-spacing": [ "error", "always" ],
        // disables es6 rules
        "prefer-rest-params": "off", // rest parameters are not widely supported
        "no-dupe-class-members": "off",
        "no-var": "off",
        "object-shorthand": "off",
        "prefer-arrow-callback": "off",
        "prefer-spread": "off",
        "prefer-template": "off",
        "array-bracket-spacing": [ "error", "always" ],
        "no-bitwise": [ "error", { "allow": [ "&" ] } ], // only for Hammer JS
        "no-new": "off",
        "sort-keys": "off",
        "consistent-this": "off",
        "capitalized-comments": "off"
    },
    "env": {
        "browser": true,
        "amd": true
    },
    "globals": {
        "logger": true,
        "mendix": true,
        "mxui": true,
        "mx": true,
        "module": true,
        "cordova": true,
        "Media": true,
        "LocalFileSystem": true
    }
}
